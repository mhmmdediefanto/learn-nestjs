generator client {
  provider   = "prisma-client"
  engineType = "library"
  output     = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  email              String               @unique
  password           String
  name               String
  phone              String?
  roles              Roles                @default(CUSTOMER)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  rental             Rental[]
  AccessRefreshToken AccessRefreshToken[]
}

model Tool {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  category    String
  pricePerDay Int
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rentals     Rental[]
}

model Rental {
  id         String    @id @default(uuid())
  userId     String
  toolId     String
  quantity   Int
  startDate  DateTime
  endDate    DateTime
  status     String    @default("BOOKED")
  totalPrice Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  returnDate DateTime?
  tool       Tool      @relation(fields: [toolId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
}

model AccessRefreshToken {
  id           String   @id @default(uuid()) // Ganti @id dari String biasa ke UUID
  userId       String   @unique
  refreshToken String   @unique // Kolom untuk menyimpan Refresh Token
  expiredAt    DateTime // Tipe data yang benar
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id]) // Relasi ke model User
}

enum Roles {
  CUSTOMER
  ADMIN
}
